
// Define button properties
$button-padding: (
  small: 8px 16px,
  medium: 12px 24px,
  large: 16px 32px,
  xlarge: 20px 40px,
  xxlarge: 24px 48px
);

$button-border: (
  thin: 1px solid #ccc,
  medium: 2px solid #ccc,
  thick: 3px solid #ccc,
  none: none,
  dashed: 2px dashed #ccc
);

$button-border-radius: (
  none: 0px,
  small: 4px,
  medium: 8px,
  large: 12px,
  round: 50px
);

$button-color: (
  primary: #fff,
  secondary: #333,
  success: #fff,
  danger: #fff,
  info: #fff
);

$button-background: (
  primary: #007bff,
  secondary: #6c757d,
  success: #28a745,
  danger: #dc3545,
  info: #17a2b8
);

$svg-position: (
  left: left,
  right: right,
  both: left-right
);

// Mixin for button styling
@mixin button-style($padding, $border, $border-radius, $color, $background, $svg-position) {
  padding: map-get($button-padding, $padding);
  border: map-get($button-border, $border);
  border-radius: map-get($button-border-radius, $border-radius);
  color: map-get($button-color, $color);
  background-color: map-get($button-background, $background);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  cursor: pointer;
  transition: all 0.3s ease;

  // SVG positioning logic
  & svg {
    position: absolute;
    @if $svg-position == left {
      left: 10px;
    }
    @else if $svg-position == right {
      right: 10px;
    }
    @else if $svg-position == both {
      left: 10px;
      right: 10px;
    }
  }

  // Hover effect
  &:hover {
    opacity: 0.8;
  }

  // Active effect
  &:active {
    transform: scale(0.98);
  }
}

// Button component styles
.button {
  @include button-style(medium, thin, medium, primary, primary, left);
  // Customizable variants can be added below:
  &--small {
    @include button-style(small, thin, none, secondary, secondary, right);
  }

  &--large {
    @include button-style(large, medium, large, success, success, both);
  }

  &--rounded {
    @include button-style(medium, none, round, danger, danger, left);
  }

  &--info {
    @include button-style(medium, thick, small, info, info, right);
  }

  // You can further extend styles as necessary, for example:
  &--custom {
    @include button-style(xxlarge, dashed, round, primary, danger, both);
  }
}